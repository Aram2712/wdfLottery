"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.metricsAPICall = void 0;
var node_fetch_1 = __importDefault(require("node-fetch"));
var timeout_signal_1 = __importDefault(require("timeout-signal"));
var package_json_1 = __importDefault(require("../../package.json"));
var config_1 = __importDefault(require("../config"));
function getLogIds(body) {
    if (Array.isArray(body)) {
        return body.map(function (value) { return value._id; });
    }
    return body._id;
}
function metricsAPICall(readmeAPIKey, body, fireAndForget) {
    if (fireAndForget === void 0) { fireAndForget = false; }
    var signal = (0, timeout_signal_1["default"])(config_1["default"].timeout);
    var encodedKey = Buffer.from("".concat(readmeAPIKey, ":")).toString('base64');
    var makeRequest = function () {
        return (0, node_fetch_1["default"])(new URL('/v1/request', config_1["default"].host), {
            method: 'post',
            body: JSON.stringify(body),
            headers: {
                Authorization: "Basic ".concat(encodedKey),
                'Content-Type': 'application/json',
                'User-Agent': "".concat(package_json_1["default"].name, "/").concat(package_json_1["default"].version)
            },
            signal: signal
        })["finally"](function () {
            timeout_signal_1["default"].clear(signal);
        });
    };
    if (fireAndForget) {
        makeRequest();
        return Promise.resolve({
            ids: getLogIds(body)
        });
    }
    return makeRequest().then(function (response) {
        return {
            response: response,
            ids: getLogIds(body)
        };
    });
}
exports.metricsAPICall = metricsAPICall;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0cmljcy1sb2cuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL21ldHJpY3MtbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUdBLDBEQUErQjtBQUMvQixrRUFBMkM7QUFFM0Msb0VBQXFDO0FBQ3JDLHFEQUErQjtBQW9DL0IsU0FBUyxTQUFTLENBQUMsSUFBeUM7SUFDMUQsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxHQUFHLEVBQVQsQ0FBUyxDQUFDLENBQUM7S0FDckM7SUFFRCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUM7QUFDbEIsQ0FBQztBQUVELFNBQWdCLGNBQWMsQ0FDNUIsWUFBb0IsRUFDcEIsSUFBdUIsRUFDdkIsYUFBcUI7SUFBckIsOEJBQUEsRUFBQSxxQkFBcUI7SUFFckIsSUFBTSxNQUFNLEdBQUcsSUFBQSwyQkFBYSxFQUFDLG1CQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0MsSUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFHLFlBQVksTUFBRyxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRXRFLElBQU0sV0FBVyxHQUFHO1FBQ2xCLE9BQU8sSUFBQSx1QkFBSyxFQUFDLElBQUksR0FBRyxDQUFDLGFBQWEsRUFBRSxtQkFBTSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2hELE1BQU0sRUFBRSxNQUFNO1lBQ2QsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1lBQzFCLE9BQU8sRUFBRTtnQkFDUCxhQUFhLEVBQUUsZ0JBQVMsVUFBVSxDQUFFO2dCQUNwQyxjQUFjLEVBQUUsa0JBQWtCO2dCQUNsQyxZQUFZLEVBQUUsVUFBRyx5QkFBRyxDQUFDLElBQUksY0FBSSx5QkFBRyxDQUFDLE9BQU8sQ0FBRTthQUMzQztZQUNELE1BQU0sUUFBQTtTQUNQLENBQUMsQ0FBQyxTQUFPLENBQUEsQ0FBQztZQUNULDJCQUFhLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzlCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0lBRUYsSUFBSSxhQUFhLEVBQUU7UUFDakIsV0FBVyxFQUFFLENBQUM7UUFDZCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUM7WUFDckIsR0FBRyxFQUFFLFNBQVMsQ0FBQyxJQUFJLENBQUM7U0FDckIsQ0FBQyxDQUFDO0tBQ0o7SUFFRCxPQUFPLFdBQVcsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFBLFFBQVE7UUFDaEMsT0FBTztZQUNMLFFBQVEsVUFBQTtZQUNSLEdBQUcsRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDO1NBQ3JCLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFwQ0Qsd0NBb0NDIn0=